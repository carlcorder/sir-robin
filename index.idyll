[meta title:"Sir Robin" description:"‚ôû The first elementary knightship found in Conway's Game of Life." /]

[Header
  title:"Sir Robin"
  subtitle:"‚ôû The first elementary knightship found in Conway's Game of Life."
  author:"Carl Corder"
  authorLink:"https://github.com/carlcorder/SirRobin" /]

[img
src:'static/images/sir-robin.png'
style:`{ width: 600, display: 'block', margin: '20px auto' }`
/]

Conway's Game of Life is a cellular automaton devised by mathematician John 
Conway in 1970. The Game of Life consists of a two-dimensional grid of cells, each 
of which is in one of two possible states: dead or alive. Every cell interacts with its 
eight neighbors and at each step in time, the following rules apply:

1. Any live cell with fewer than two live neighbors dies, as if by under population.
2. Any live cell with two or three live neighbors lives on to the next generation.
3. Any live cell with more than three live neighbors dies, as if by overpopulation.
4. Any dead cell with exactly three live neighbors becomes a live cell, as if by reproduction.

From these four *simple* rules, many [interesting patterns](https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life#Examples_of_patterns) can evolve. For example, the 
**glider** moves across the grid at a diagonal, much like the ‚ôù Bishop on a chess 
board:

[img
  src:'static/images/glider.gif'
  style:`{ width: 75, display: 'block', margin: '30px auto' }`
  /]

The glider is a simple pattern that belongs to a more general class of patterns known 
as spaceships. A *spaceship* is any pattern that reappears after a certain number of 
generations in the same orientation but in a different position.

A *knightship* is a spaceship that moves two squares left for every one square it moves up, 
similar to the ‚ôû Knight on a chess board. It may surprise you to learn that the first true
knightship was only [recently discovered](http://www.conwaylife.com/wiki/Sir_Robin), nearly 50 years after the 
game's creation!

![brave-sir-robin](https://media.giphy.com/media/k82pFQvI75SR7iT7hA/giphy.gif)

**Sir Robin** was found by [Adam Goucher](http://www.conwaylife.com/wiki/Adam_P._Goucher) on March 6th, 2018 using a 
searching program that extends partials. A partial is simply an intermediate object that might be 
used as part of a spaceship. Of course, partials themselves are not spaceships. They 
lack the key feature of being periodic. But, some come very close. Such as the [Almost Knightship](http://www.conwaylife.com/wiki/Almost_knightship) 
which was found back in 2004.

[img
  src:'static/images/almost-knightship.png'
  style:`{ width: 300, display: 'block', margin: '30px auto' }`
/]

Generation 0 (`left`) and generation 6 (`right`) show that the pattern is different by 
only two cells at the top right. So close!

## Creating Sir Robin using üëë regl

[Regl](http://regl.party/) is a functional abstraction for wegbl with a data-driven style inspired by React.

Starting with the [life.js](https://github.com/regl-project/regl/blob/gh-pages/example/life.js) example:

[img
  src:'https://regl-project.github.io/regl/www/gallery/img/life.png'
  style:`{ width: 600, display: 'block', margin: '30px auto' }`
/]

I created several helper functions to parse [RLE](http://www.conwaylife.com/wiki/RLE) strings into `INITIAL_CONDITIONS` for 
regl's framebuffer data. Here's the run-length encoding of [Sir Robin](http://www.conwaylife.com/patterns/sirrobin.rle):

[gist gist:"84d669590908d2beaf09af4ff5795717" file:"SIR_ROBIN.js" /]

and the following functions convert this string into something useable by regl's framebuffer:

[gist gist:"e0fee149300321b60d2900776279862f" file:"regl-life-initialize.js"/]

## Ride forth from Camelot!

[SirRobinComponent /]
`‚ôû Sir Robin in regl`